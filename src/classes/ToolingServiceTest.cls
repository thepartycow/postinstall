@isTest private class ToolingServiceTest {
    
    //00:26:24.286 (286492000)|CALLOUT_REQUEST|[2224]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQChuDKw2PyUD_.Zgp9ABaRAvYfIlp0pjv1t0ZCkNmMp5s5.Z6ScDj6u0eYUmBRmjwE.yjUqAv09CgoXbdTVFgdZWSz78</sessionId></SessionHeader></env:Header><env:Body><retrieve xmlns="urn:tooling.soap.sforce.com"><select>Id</select><type>CustomField</type><ids>00Nb0000007p4tG</ids></retrieve></env:Body></env:Envelope>
    //00:26:24.286 (286571000)|CALLOUT_REQUEST|[2224]|retrieve_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(select_x, type_x, ids), ids=(00Nb0000007p4tG), ids_type_info=(ids, urn:tooling.soap.sforce.com, null, 0, -1, false), select_x=Id, select_x_type_info=(select, urn:tooling.soap.sforce.com, null, 1, 1, false), type_x=CustomField, type_x_type_info=(type, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //00:26:24.368 (368447000)|CALLOUT_RESPONSE|[2224]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><retrieveResponse><result xsi:type="CustomField"><Id>00Nb0000007p4tGEAQ</Id></result></retrieveResponse></soapenv:Body></soapenv:Envelope>
    public class RetrieveMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.retrieveResponse_element responseElement = new ToolingService.retrieveResponse_element();
            responseElement.result = new List<ToolingService.sObject_x>{new ToolingService.sObject_x()};
            response.put('response_x', responseElement); 
        }
    }
    
    static testMethod void coverRetrieve() {
        Test.setMock(WebServiceMock.class, new RetrieveMock());
        Object result = new ToolingService.Client().retrieve_x('Id', 'CustomField', new List<String>{'00Nb0000007p4tG'});
        System.assert(result instanceof List<ToolingService.sObject_x>);
    }
    
    //00:48:06.521 (521495000)|CALLOUT_REQUEST|[2238]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQChuDKw2PyUD_.Zgp9ABaRAvYfIlp0pjv1t0ZCkNmMp5s5.Z6ScDj6u0eYUmBRmjwE.yjUqAv09CgoXbdTVFgdZWSz78</sessionId></SessionHeader></env:Header><env:Body><describeGlobal xmlns="urn:tooling.soap.sforce.com" /></env:Body></env:Envelope>
    //00:48:06.521 (521597000)|CALLOUT_REQUEST|[2238]|describeGlobal_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=()]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //00:48:07.214 (1214336000)|CALLOUT_RESPONSE|[2238]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><describeGlobalResponse><result><encoding>UTF-8</encoding><maxBatchSize>200</maxBatchSize><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>01p</keyPrefix><label>Apex Class</label><labelPlural>Apex Classes</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexClass</name><queryable>true</queryable><replicateable>true</replicateable><retrieveable>true</retrieveable><searchable>true</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>400</keyPrefix><label>Metadata Container Member</label><labelPlural>Metadata Container Member</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexClassMember</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>714</keyPrefix><label>Apex Code Coverage Data</label><labelPlural>Apex Code Coverage Data</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexCodeCoverage</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>715</keyPrefix><label>Apex Code Coverage Aggregate Data</label><labelPlural>Apex Code Coverage Aggregate Data</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexCodeCoverageAggregate</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>099</keyPrefix><label>Visualforce Component</label><labelPlural>Visualforce Components</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexComponent</name><queryable>true</queryable><replicateable>true</replicateable><retrieveable>true</retrieveable><searchable>true</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>403</keyPrefix><label>Metadata Container Member</label><labelPlural>Metadata Container Member</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexComponentMember</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>1do</keyPrefix><label>Apex Execution Overlay Action</label><labelPlural>Apex Execution Overlay Actions</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexExecutionOverlayAction</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>07n</keyPrefix><label>Apex Execution Overlay Result</label><labelPlural>Apex Execution Overlay Results</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexExecutionOverlayResult</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>07L</keyPrefix><label>Apex Debug Log</label><labelPlural>Apex Debug Log</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexLog</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>716</keyPrefix><label>Apex Org-wide Code Coverage</label><labelPlural>Apex Org-wide Code Coverage</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexOrgWideCoverage</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>066</keyPrefix><label>Visualforce Page</label><labelPlural>Visualforce Pages</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexPage</name><queryable>true</queryable><replicateable>true</replicateable><retrieveable>true</retrieveable><searchable>true</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>402</keyPrefix><label>Metadata Container Member</label><labelPlural>Metadata Container Member</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexPageMember</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>709</keyPrefix><label>Apex Test Queue Item</label><labelPlural>Apex Test Queue Items</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexTestQueueItem</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>07M</keyPrefix><label>Apex Test Result</label><labelPlural>Apex Test Results</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexTestResult</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>01q</keyPrefix><label>Apex Trigger</label><labelPlural>Apex Triggers</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexTrigger</name><queryable>true</queryable><replicateable>true</replicateable><retrieveable>true</retrieveable><searchable>true</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>401</keyPrefix><label>Metadata Container Member</label><labelPlural>Metadata Container Member</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ApexTriggerMember</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>707</keyPrefix><label>Apex Job</label><labelPlural>Apex Jobs</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>AsyncApexJob</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>1dr</keyPrefix><label>Container Async Request</label><labelPlural>Container Async Request</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>ContainerAsyncRequest</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>00N</keyPrefix><label>Custom Field Definition</label><labelPlural>Custom Field Definitions</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>CustomField</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>01I</keyPrefix><label>Custom Object Definition</label><labelPlural>Custom Object Definitions</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>CustomObject</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>1dp</keyPrefix><label>IDE Perspective</label><labelPlural>IDE Perspectives</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>IDEPerspective</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>1de</keyPrefix><label>IDE Workspace</label><labelPlural>IDE Workspaces</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>IDEWorkspace</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>1dc</keyPrefix><label>Metadata Container</label><labelPlural>Metadata Container</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>MetadataContainer</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix xsi:nil="true"/><label>Metadata Container Member</label><labelPlural>Metadata Container Member</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>MetadataContainerMember</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>false</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix xsi:nil="true"/><label>Name</label><labelPlural>Names</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>Name</name><queryable>false</queryable><replicateable>false</replicateable><retrieveable>false</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>081</keyPrefix><label>Static Resource</label><labelPlural>Static Resources</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>StaticResource</name><queryable>true</queryable><replicateable>true</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>true</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>7tf</keyPrefix><label>Trace Flag</label><labelPlural>Trace Flags</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>TraceFlag</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>005</keyPrefix><label>User</label><labelPlural>Users</labelPlural><layoutable>true</layoutable><mergeable>false</mergeable><name>User</name><queryable>true</queryable><replicateable>true</replicateable><retrieveable>true</retrieveable><searchable>true</searchable><triggerable>true</triggerable><undeletable>false</undeletable><updateable>true</updateable></sobjects><sobjects><activateable>false</activateable><createable>false</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><keyPrefix>03u</keyPrefix><label>User Preference</label><labelPlural>User Preferences</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>UserPreference</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><triggerable>false</triggerable><undeletable>false</undeletable><updateable>false</updateable></sobjects></result></describeGlobalResponse></soapenv:Body></soapenv:Envelope>
    public class DescribeGlobalMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.describeGlobalResponse_element responseElement = new ToolingService.describeGlobalResponse_element();
            responseElement.result = new ToolingService.DescribeGlobalResult();
            responseElement.result.sobjects = new List<ToolingService.DescribeGlobalSObjectResult>{new ToolingService.DescribeGlobalSObjectResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverDescribeGlobal() {
        Test.setMock(WebServiceMock.class, new DescribeGlobalMock());
        Object result = new ToolingService.Client().describeGlobal();
        System.assert(result instanceof ToolingService.DescribeGlobalResult);
    }
    
    //01:30:06.384 (384082000)|CALLOUT_REQUEST|[2259]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQChuDKw2PyUD_.Zgp9ABaRAvYfIlp0pjv1t0ZCkNmMp5s5.Z6ScDj6u0eYUmBRmjwE.yjUqAv09CgoXbdTVFgdZWSz78</sessionId></SessionHeader></env:Header><env:Body><queryMore xmlns="urn:tooling.soap.sforce.com"><queryLocator>01gb0000008mQS9AAM-2000</queryLocator></queryMore></env:Body></env:Envelope>
    //01:30:06.384 (384179000)|CALLOUT_REQUEST|[2259]|queryMore_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryLocator), queryLocator=01gb0000008mQS9AAM-2000, queryLocator_type_info=(queryLocator, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //01:30:06.459 (459860000)|CALLOUT_RESPONSE|[2259]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sf="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><soapenv:Fault><faultcode>sf:INVALID_TYPE</faultcode><faultstring>INVALID_TYPE: sObject type &apos;Contact&apos; is not supported.</faultstring><detail><sf:UnexpectedErrorFault xsi:type="sf:UnexpectedErrorFault"><sf:exceptionCode>INVALID_TYPE</sf:exceptionCode><sf:exceptionMessage>sObject type &apos;Contact&apos; is not supported.</sf:exceptionMessage></sf:UnexpectedErrorFault></detail></soapenv:Fault></soapenv:Body></soapenv:Envelope>
    public class QueryMoreMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryMoreResponse_element responseElement = new ToolingService.queryMoreResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            responseElement.result.records = new List<ToolingService.sObject_x>{new ToolingService.sObject_x()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverQueryMore() {
        Test.setMock(WebServiceMock.class, new QueryMoreMock());
        Object result = new ToolingService.Client().queryMore('01gb0000008mQS9AAM-2000');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //01:42:52.238 (238434000)|CALLOUT_REQUEST|[2279]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQChuDKw2PyUD_.Zgp9ABaRAvYfIlp0pjv1t0ZCkNmMp5s5.Z6ScDj6u0eYUmBRmjwE.yjUqAv09CgoXbdTVFgdZWSz78</sessionId></SessionHeader></env:Header><env:Body><describeSObject xmlns="urn:tooling.soap.sforce.com"><type>CustomField</type></describeSObject></env:Body></env:Envelope>
    //01:42:52.238 (238490000)|CALLOUT_REQUEST|[2279]|describeSObject_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(type_x), type_x=CustomField, type_x_type_info=(type, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //01:42:52.453 (453090000)|CALLOUT_RESPONSE|[2279]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><describeSObjectResponse><result><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><fields><autoNumber>false</autoNumber><byteLength>18</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>false</createable><custom>false</custom><defaultedOnCreate>true</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>true</idLookup><label>Custom Field Definition ID</label><length>18</length><name>Id</name><nameField>false</nameField><namePointing>false</namePointing><nillable>false</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>tns:ID</soapType><sortable>true</sortable><type>id</type><unique>false</unique><updateable>false</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>120</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>true</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Entity Enumeration Or ID</label><length>40</length><name>TableEnumOrId</name><nameField>false</nameField><namePointing>false</namePointing><nillable>false</nillable><permissionable>false</permissionable><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Account</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Activity</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Asset</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Campaign</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>CampaignMember</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Case</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Contact</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>ContentVersion</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Contract</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Idea</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Lead</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Opportunity</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>OpportunityLineItem</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Pricebook2</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Product2</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Solution</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>User</value></picklistValues><precision>0</precision><restrictedPicklist>true</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>true</sortable><type>picklist</type><unique>false</unique><updateable>false</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>120</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>true</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Field Name</label><length>40</length><name>DeveloperName</name><nameField>true</nameField><namePointing>false</namePointing><nillable>false</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>true</sortable><type>string</type><unique>false</unique><updateable>true</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>45</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>false</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Namespace Prefix</label><length>15</length><name>NamespacePrefix</name><nameField>false</nameField><namePointing>false</namePointing><nillable>true</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>true</sortable><type>string</type><unique>false</unique><updateable>false</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>0</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>true</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>false</filterable><groupable>false</groupable><idLookup>false</idLookup><label>Custom Field Definition Metadata</label><length>0</length><name>Metadata</name><nameField>false</nameField><namePointing>false</namePointing><nillable>true</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>urn:CustomFieldMetadata</soapType><sortable>false</sortable><type>complexvalue</type><unique>false</unique><updateable>true</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>240</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>false</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>false</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Metadata API Full Name</label><length>80</length><name>FullName</name><nameField>false</nameField><namePointing>false</namePointing><nillable>true</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>false</sortable><type>string</type><unique>false</unique><updateable>false</updateable></fields><keyPrefix>00N</keyPrefix><label>Custom Field Definition</label><labelPlural>Custom Field Definitions</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>CustomField</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><undeletable>false</undeletable><updateable>true</updateable></result></describeSObjectResponse></soapenv:Body></soapenv:Envelope>
    public class DescribeSObjectMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.describeSObjectResponse_element responseElement = new ToolingService.describeSObjectResponse_element();
            responseElement.result = new ToolingService.DescribeSObjectResult();
            responseElement.result.childRelationships = new List<ToolingService.ChildRelationship>{new ToolingService.ChildRelationship()};
            responseElement.result.fields = new List<ToolingService.Field>{new ToolingService.Field()};
            responseElement.result.fields[0].picklistValues = new List<ToolingService.PicklistEntry>{new ToolingService.PicklistEntry()};
            responseElement.result.recordTypeInfos = new List<ToolingService.RecordTypeInfo>{new ToolingService.RecordTypeInfo()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverDescribeSObject() {
        Test.setMock(WebServiceMock.class, new DescribeSObjectMock());
        Object result = new ToolingService.Client().describeSObject('CustomField');
        System.assert(result instanceof ToolingService.DescribeSObjectResult);
    }
    
    //02:02:22.389 (389103000)|CALLOUT_REQUEST|[2299]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQChuDKw2PyUD_.Zgp9ABaRAvYfIlp0pjv1t0ZCkNmMp5s5.Z6ScDj6u0eYUmBRmjwE.yjUqAv09CgoXbdTVFgdZWSz78</sessionId></SessionHeader></env:Header><env:Body><logout xmlns="urn:tooling.soap.sforce.com" /></env:Body></env:Envelope>
    //02:02:22.389 (389171000)|CALLOUT_REQUEST|[2299]|logout_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=()]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //02:02:22.464 (464487000)|CALLOUT_RESPONSE|[2299]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><logoutResponse/></soapenv:Body></soapenv:Envelope>
    public class LogoutMock implements WebServiceMock {
        Boolean invoked = false;
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.logoutResponse_element responseElement = new ToolingService.logoutResponse_element();
            this.invoked = true;
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverLogout() {
        LogoutMock mock = new LogoutMock();
        Test.setMock(WebServiceMock.class, mock);
        new ToolingService.Client().logout();
        System.assert(mock.invoked);
    }
    
    //17:15:26.456 (456345000)|CALLOUT_REQUEST|[2320]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQPKzXFngCq06.Kp1mncmDamy_OKsUxzV6b4aq6FDpDdwNkyxHaX.UPFI9Oixiy5wgZ50G3Dkhv8o_.d8xvCn5iynA7w7</sessionId></SessionHeader></env:Header><env:Body><setPassword xmlns="urn:tooling.soap.sforce.com"><userId>005b0000000vzw0</userId><password>pw42lkj1</password></setPassword></env:Body></env:Envelope>
    //17:15:26.456 (456411000)|CALLOUT_REQUEST|[2320]|setPassword_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(userId, password), password=pw42lkj1, password_type_info=(password, urn:tooling.soap.sforce.com, null, 1, 1, false), userId=005b0000000vzw0, userId_type_info=(userId, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:15:26.587 (587430000)|CALLOUT_RESPONSE|[2320]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><setPasswordResponse><result/></setPasswordResponse></soapenv:Body></soapenv:Envelope>
    public class SetPasswordMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.setPasswordResponse_element responseElement = new ToolingService.setPasswordResponse_element();
            responseElement.result = new ToolingService.SetPasswordResult();
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverSetPassword() {
        Test.setMock(WebServiceMock.class, new SetPasswordMock());
        Object result = new ToolingService.Client().setPassword('005b0000000vzw0', 'pw42lkj1');
        System.assert(result instanceof ToolingService.SetPasswordResult);
    }
    
    //https://success.salesforce.com/issues_view?id=a1p30000000T2GcAAK
    //17:27:55.267 (267126000)|CALLOUT_REQUEST|[2343]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header /><env:Body><login xmlns="urn:tooling.soap.sforce.com"><username>matt@69demo.com</username><password>cs42lkj1</password></login></env:Body></env:Envelope>
    //17:27:55.267 (267196000)|CALLOUT_REQUEST|[2343]|login_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(username, password), password=cs42lkj1, password_type_info=(password, urn:tooling.soap.sforce.com, null, 1, 1, false), username=matt@69demo.com, username_type_info=(username, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:27:55.349 (349664000)|CALLOUT_RESPONSE|[2343]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sf="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><soapenv:Fault><faultcode>sf:UNKNOWN_EXCEPTION</faultcode><faultstring>UNKNOWN_EXCEPTION: An unexpected error occurred. Please include this ErrorId if you contact support: 354283919-31847 (1318667741)</faultstring><detail><sf:UnexpectedErrorFault xsi:type="sf:UnexpectedErrorFault"><sf:exceptionCode>UNKNOWN_EXCEPTION</sf:exceptionCode><sf:exceptionMessage>An unexpected error occurred. Please include this ErrorId if you contact support: 354283919-31847 (1318667741)</sf:exceptionMessage></sf:UnexpectedErrorFault></detail></soapenv:Fault></soapenv:Body></soapenv:Envelope>
    public class LoginMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.loginResponse_element responseElement = new ToolingService.loginResponse_element();
            responseElement.result = new ToolingService.LoginResult();
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverLogin() {
        Test.setMock(WebServiceMock.class, new LoginMock());
        Object result = new ToolingService.Client().login('matt@99demo.com', 'cs42lkj1');
        System.assert(result instanceof ToolingService.LoginResult);
    }
    
    //22:31:40.331 (331258000)|CALLOUT_REQUEST|[2363]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQLrOdG9aPfTI5gURaiNna1XRe0M8zLHYLbz5WcU7VqYYMtw0l4i81GDdtKyPmkNu90dlPWwZIIDhTA2e9cViG5ZyFtqu</sessionId></SessionHeader></env:Header><env:Body><delete xmlns="urn:tooling.soap.sforce.com"><ids>00Nb0000007p4tE</ids></delete></env:Body></env:Envelope>
    //22:31:40.331 (331321000)|CALLOUT_REQUEST|[2363]|delete_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(ids), ids=(00Nb0000007p4tE), ids_type_info=(ids, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //22:31:40.397 (397185000)|CALLOUT_RESPONSE|[2363]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><deleteResponse><result><errors><message>insufficient access rights on object id</message><statusCode>INSUFFICIENT_ACCESS_OR_READONLY</statusCode></errors><id xsi:nil="true"/><success>false</success></result></deleteResponse></soapenv:Body></soapenv:Envelope>
    public class DeleteMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.deleteResponse_element responseElement = new ToolingService.deleteResponse_element();
            responseElement.result = new List<ToolingService.DeleteResult>{new ToolingService.DeleteResult()};
            responseElement.result[0].errors = new List<ToolingService.Error>{new ToolingService.Error()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverDelete() {
        Test.setMock(WebServiceMock.class, new DeleteMock());
        Object result = new ToolingService.Client().delete_x(new List<String>{'00Nb0000007p4tE'});
        System.assert(result instanceof List<ToolingService.DeleteResult>);
    }
    
    //22:37:39.308 (308473000)|CALLOUT_REQUEST|[2384]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQLrOdG9aPfTI5gURaiNna1XRe0M8zLHYLbz5WcU7VqYYMtw0l4i81GDdtKyPmkNu90dlPWwZIIDhTA2e9cViG5ZyFtqu</sessionId></SessionHeader></env:Header><env:Body><query xmlns="urn:tooling.soap.sforce.com"><queryString>SELECT Id FROM CustomField WHERE DeveloperName = 'NumberOfLocations'</queryString></query></env:Body></env:Envelope>
    //22:37:39.308 (308539000)|CALLOUT_REQUEST|[2384]|query_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryString), queryString=SELECT Id FROM CustomField WHERE DeveloperName = 'NumberOfLocations', queryString_type_info=(queryString, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //22:37:40.014 (1014190000)|CALLOUT_RESPONSE|[2384]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><queryResponse><result><done>true</done><entityTypeName>CustomFieldDefinition</entityTypeName><queryLocator xsi:nil="true"/><records xsi:type="CustomField"><Id>00Nb0000007p4tGEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tSEAQ</Id></records><size>2</size><totalSize>2</totalSize></result></queryResponse></soapenv:Body></soapenv:Envelope>
    public class QueryMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryResponse_element responseElement = new ToolingService.queryResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            responseElement.result.records = new List<ToolingService.sObject_x>{new ToolingService.sObject_x()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverQuery() {
        Test.setMock(WebServiceMock.class, new QueryMock());
        Object result = new ToolingService.Client().query('SELECT Id FROM CustomField WHERE DeveloperName = \'NumberOfLocations\'');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //22:44:49.251 (251488000)|CALLOUT_REQUEST|[2407]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQLrOdG9aPfTI5gURaiNna1XRe0M8zLHYLbz5WcU7VqYYMtw0l4i81GDdtKyPmkNu90dlPWwZIIDhTA2e9cViG5ZyFtqu</sessionId></SessionHeader></env:Header><env:Body><getDeleted xmlns="urn:tooling.soap.sforce.com"><sObjectType>ApexClass</sObjectType><start>2014-01-11T22:44:49.561Z</start><end>2014-01-11T22:44:49.561Z</end></getDeleted></env:Body></env:Envelope>
    //22:44:49.251 (251565000)|CALLOUT_REQUEST|[2407]|getDeleted_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), end_x=2014-01-11 22:44:49, end_x_type_info=(end, urn:tooling.soap.sforce.com, null, 1, 1, false), field_order_type_info=(sObjectType, start, end_x), sObjectType=ApexClass, sObjectType_type_info=(sObjectType, urn:tooling.soap.sforce.com, null, 1, 1, false), start=2014-01-11 22:44:49, start_type_info=(start, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //22:44:49.333 (333220000)|CALLOUT_RESPONSE|[2407]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><getDeletedResponse><result><earliestDateAvailable>2014-01-10T21:08:00.000Z</earliestDateAvailable><latestDateCovered>2014-01-11T22:44:00.000Z</latestDateCovered></result></getDeletedResponse></soapenv:Body></soapenv:Envelope>
    public class GetDeletedMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.getDeletedResponse_element responseElement = new ToolingService.getDeletedResponse_element();
            responseElement.result = new ToolingService.GetDeletedResult();
            responseElement.result.deletedRecords = new List<ToolingService.DeletedRecord>{new ToolingService.DeletedRecord()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverGetDeleted() {
        Test.setMock(WebServiceMock.class, new GetDeletedMock());
        Object result = new ToolingService.Client().getDeleted('ApexClass', System.now(), System.now());
        System.assert(result instanceof ToolingService.GetDeletedResult);
    }
    
    //see http://salesforce.stackexchange.com/q/18421/320 and http://salesforce.stackexchange.com/q/24042/320
    //01:34:10.329 (329641000)|CALLOUT_REQUEST|[2428]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQLrOdG9aPfTI5gURaiNna1XRe0M8zLHYLbz5WcU7VqYYMtw0l4i81GDdtKyPmkNu90dlPWwZIIDhTA2e9cViG5ZyFtqu</sessionId></SessionHeader></env:Header><env:Body><update xmlns="urn:tooling.soap.sforce.com"><sObjects><DeveloperName xsi:nil="true" /><FullName xsi:nil="true" /><Metadata><picklist><sorted /></picklist><type /></Metadata><NamespacePrefix xsi:nil="true" /><TableEnumOrId xsi:nil="true" /></sObjects></update></env:Body></env:Envelope>
    //01:34:10.330 (330079000)|CALLOUT_REQUEST|[2428]|update_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(CustomField:[DeveloperName=null, DeveloperName_type_info=(DeveloperName, urn:tooling.soap.sforce.com, null, 0, 1, true), FullName=null, FullName_type_info=(FullName, urn:tooling.soap.sforce.com, null, 0, 1, true), Metadata=CustomFieldMetadata:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), caseSensitive=null, caseSensitive_type_info=(caseSensitive, urn:tooling.soap.sforce.com, null, 0, 1, false), customDataType=null, customDataType_type_info=(customDataType, urn:tooling.soap.sforce.com, null, 0, 1, false), defaultValue=null, defaultValue_type_info=(defaultValue, urn:tooling.soap.sforce.com, null, 0, 1, false), deleteConstraint=null, deleteConstraint_type_info=(deleteConstraint, urn:tooling.soap.sforce.com, null, 0, 1, false), deprecated=null, deprecated_type_info=(deprecated, urn:tooling.soap.sforce.com, null, 0, 1, false), description=null, description_type_info=(description, urn:tooling.soap.sforce.com, null, 0, 1, false), displayFormat=null, displayFormat_type_info=(displayFormat, urn:tooling.soap.sforce.com, null, 0, 1, false), escapeMarkup=null, escapeMarkup_type_info=(escapeMarkup, urn:tooling.soap.sforce.com, null, 0, 1, false), externalDeveloperName=null, externalDeveloperName_type_info=(externalDeveloperName, urn:tooling.soap.sforce.com, null, 0, 1, false), externalId=null, externalId_type_info=(externalId, urn:tooling.soap.sforce.com, null, 0, 1, false), field_order_type_info=(caseSensitive, customDataType, defaultValue, deleteConstraint, deprecated, description, displayFormat, escapeMarkup, externalDeveloperName, externalId, ...), formula=null, formulaTreatBlanksAs=null, formulaTreatBlanksAs_type_info=(formulaTreatBlanksAs, urn:tooling.soap.sforce.com, null, 0, 1, false), formula_type_info=(formula, urn:tooling.soap.sforce.com, null, 0, 1, false), inlineHelpText=null, inlineHelpText_type_info=(inlineHelpText, urn:tooling.soap.sforce.com, null, 0, 1, false), isFilteringDisabled=null, isFilteringDisabled_type_info=(isFilteringDisabled, urn:tooling.soap.sforce.com, null, 0, 1, false), isNameField=null, isNameField_type_info=(isNameField, urn:tooling.soap.sforce.com, null, 0, 1, false), isSortingDisabled=null, isSortingDisabled_type_info=(isSortingDisabled, urn:tooling.soap.sforce.com, null, 0, 1, false), label=null, label_type_info=(label, urn:tooling.soap.sforce.com, null, 0, 1, false), length=null, length_type_info=(length, urn:tooling.soap.sforce.com, null, 0, 1, false), maskChar=null, maskChar_type_info=(maskChar, urn:tooling.soap.sforce.com, null, 0, 1, false), maskType=null, maskType_type_info=(maskType, urn:tooling.soap.sforce.com, null, 0, 1, false), picklist=Picklist:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), controllingField=null, controllingField_type_info=(controllingField, urn:tooling.soap.sforce.com, null, 0, 1, false), field_order_type_info=(controllingField, sorted), sorted=null, sorted_type_info=(sorted, urn:tooling.soap.sforce.com, null, 1, 1, false)], picklist_type_info=(picklist, urn:tooling.soap.sforce.com, null, 0, 1, false), populateExistingRows=null, populateExistingRows_type_info=(populateExistingRows, urn:tooling.soap.sforce.com, null, 0, 1, false), precision=null, precision_type_info=(precision, urn:tooling.soap.sforce.com, null, 0, 1, false), referenceTo=null, referenceTo_type_info=(referenceTo, urn:tooling.soap.sforce.com, null, 0, 1, false), relationshipLabel=null, relationshipLabel_type_info=(relationshipLabel, urn:tooling.soap.sforce.com, null, 0, 1, false), relationshipName=null, relationshipName_type_info=(relationshipName, urn:tooling.soap.sforce.com, null, 0, 1, false), relationshipOrder=null, relationshipOrder_type_info=(relationshipOrder, urn:tooling.soap.sforce.com, null, 0, 1, false), reparentableMasterDetail=null, reparentableMasterDetail_type_info=(reparentableMasterDetail, urn:tooling.soap.sforce.com, null, 0, 1, false), required=null, required_type_info=(required, urn:tooling.soap.sforce.com, null, 0, 1, false), restrictedAdminField=null, restrictedAdminField_type_info=(restrictedAdminField, urn:tooling.soap.sforce.com, null, 0, 1, false), scale=null, scale_type_info=(scale, urn:tooling.soap.sforce.com, null, 0, 1, false), startingNumber=null, startingNumber_type_info=(startingNumber, urn:tooling.soap.sforce.com, null, 0, 1, false), stripMarkup=null, stripMarkup_type_info=(stripMarkup, urn:tooling.soap.sforce.com, null, 0, 1, false), summarizedField=null, summarizedField_type_info=(summarizedField, urn:tooling.soap.sforce.com, null, 0, 1, false), summaryFilterItems=(), summaryFilterItems_type_info=(summaryFilterItems, urn:tooling.soap.sforce.com, null, 0, -1, false), summaryForeignKey=null, summaryForeignKey_type_info=(summaryForeignKey, urn:tooling.soap.sforce.com, null, 0, 1, false), summaryOperation=null, summaryOperation_type_info=(summaryOperation, urn:tooling.soap.sforce.com, null, 0, 1, false), trackFeedHistory=null, trackFeedHistory_type_info=(trackFeedHistory, urn:tooling.soap.sforce.com, null, 0, 1, false), trackHistory=null, trackHistory_type_info=(trackHistory, urn:tooling.soap.sforce.com, null, 0, 1, false), trackTrending=null, trackTrending_type_info=(trackTrending, urn:tooling.soap.sforce.com, null, 0, 1, false), type_x=null, type_x_type_info=(type, urn:tooling.soap.sforce.com, null, 1, 1, false), unique=null, unique_type_info=(unique, urn:tooling.soap.sforce.com, null, 0, 1, false), visibleLines=null, visibleLines_type_info=(visibleLines, urn:tooling.soap.sforce.com, null, 0, 1, false), writeRequiresMasterRead=null, writeRequiresMasterRead_type_info=(writeRequiresMasterRead, urn:tooling.soap.sforce.com, null, 0, 1, false)], Metadata_type_info=(Metadata, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), TableEnumOrId=null, TableEnumOrId_type_info=(TableEnumOrId, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(DeveloperName, FullName, Metadata, NamespacePrefix, TableEnumOrId), sObject_x.Id=00Nb0000007p4tE, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //01:34:10.386 (386859000)|CALLOUT_RESPONSE|[2428]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sf="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><soapenv:Fault><faultcode>sf:INVALID_TYPE</faultcode><faultstring>INVALID_TYPE: Must send a concrete entity type.</faultstring><detail><sf:InvalidSObjectFault xsi:type="sf:InvalidSObjectFault"><sf:exceptionCode>INVALID_TYPE</sf:exceptionCode><sf:exceptionMessage>Must send a concrete entity type.</sf:exceptionMessage><sf:row>-1</sf:row><sf:column>-1</sf:column></sf:InvalidSObjectFault></detail></soapenv:Fault></soapenv:Body></soapenv:Envelope>
    public class UpdateMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.updateResponse_element responseElement = new ToolingService.updateResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            responseElement.result[0].errors = new List<ToolingService.Error>{new ToolingService.Error()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverUpdate() {
        Test.setMock(WebServiceMock.class, new UpdateMock());
        ToolingService.sObject_x obj = new ToolingService.sObject_x();
        obj.Id = '00Nb0000007p4tE';
        Object result = new ToolingService.Client().update_x(new List<ToolingService.sObject_x>{obj});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //17:04:09.466 (466999000)|CALLOUT_REQUEST|[2448]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQOsEgWb60aKf1rtPw8w7VwwpvgHMsmyzDqlHtde1nz3NIpAgaXdTQcq0Y_I7nkUoM206qHd79kCphCbajpd3cYwdfQx4</sessionId></SessionHeader></env:Header><env:Body><upsert xmlns="urn:tooling.soap.sforce.com"><fieldName>Id</fieldName><entities><Id>00Nb0000007p4tE</Id></entities></upsert></env:Body></env:Envelope>
    //17:04:09.467 (467097000)|CALLOUT_REQUEST|[2448]|upsert_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), entities=(sObject_x:[Id=00Nb0000007p4tE, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true)]), entities_type_info=(entities, urn:tooling.soap.sforce.com, null, 0, -1, false), fieldName=Id, fieldName_type_info=(fieldName, urn:tooling.soap.sforce.com, null, 1, 1, false), field_order_type_info=(fieldName, entities)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:04:09.519 (519121000)|CALLOUT_RESPONSE|[2448]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sf="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><soapenv:Fault><faultcode>sf:INVALID_TYPE</faultcode><faultstring>INVALID_TYPE: Must send a concrete entity type.</faultstring><detail><sf:InvalidSObjectFault xsi:type="sf:InvalidSObjectFault"><sf:exceptionCode>INVALID_TYPE</sf:exceptionCode><sf:exceptionMessage>Must send a concrete entity type.</sf:exceptionMessage><sf:row>-1</sf:row><sf:column>-1</sf:column></sf:InvalidSObjectFault></detail></soapenv:Fault></soapenv:Body></soapenv:Envelope>
    public class UpsertMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.upsertResponse_element responseElement = new ToolingService.upsertResponse_element();
            responseElement.result = new List<ToolingService.UpsertResult>{new ToolingService.UpsertResult()};
            responseElement.result[0].errors = new List<ToolingService.Error>{new ToolingService.Error()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverUpsert() {
        Test.setMock(WebServiceMock.class, new UpsertMock());
        ToolingService.sObject_x obj = new ToolingService.sObject_x();
        obj.Id = '00Nb0000007p4tE';
        Object result = new ToolingService.Client().upsert_x('Id', new List<ToolingService.sObject_x>{obj});
        System.assert(result instanceof List<ToolingService.UpsertResult>);
    }
    
    //17:24:30.514 (514517000)|CALLOUT_REQUEST|[2471]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQOsEgWb60aKf1rtPw8w7VwwpvgHMsmyzDqlHtde1nz3NIpAgaXdTQcq0Y_I7nkUoM206qHd79kCphCbajpd3cYwdfQx4</sessionId></SessionHeader></env:Header><env:Body><executeAnonymous xmlns="urn:tooling.soap.sforce.com"><String>System.debug(false);</String></executeAnonymous></env:Body></env:Envelope>
    //17:24:30.514 (514587000)|CALLOUT_REQUEST|[2471]|executeAnonymous_element:[String_x=System.debug(false);, String_x_type_info=(String, urn:tooling.soap.sforce.com, null, 1, 1, false), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(String_x)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:24:30.643 (643538000)|CALLOUT_RESPONSE|[2471]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><executeAnonymousResponse><result><column>-1</column><compileProblem xsi:nil="true"/><compiled>true</compiled><exceptionMessage xsi:nil="true"/><exceptionStackTrace xsi:nil="true"/><line>-1</line><success>true</success></result></executeAnonymousResponse></soapenv:Body></soapenv:Envelope>
    public class ExecuteAnonymousMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.executeAnonymousResponse_element responseElement = new ToolingService.executeAnonymousResponse_element();
            responseElement.result = new ToolingService.ExecuteAnonymousResult();
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverExecuteAnonymous() {
        Test.setMock(WebServiceMock.class, new ExecuteAnonymousMock());
        Object result = new ToolingService.Client().executeAnonymous('System.debug(true);');
        System.assert(result instanceof ToolingService.ExecuteAnonymousResult);
    }
    
    //17:31:41.203 (203086000)|CALLOUT_REQUEST|[2494]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQOsEgWb60aKf1rtPw8w7VwwpvgHMsmyzDqlHtde1nz3NIpAgaXdTQcq0Y_I7nkUoM206qHd79kCphCbajpd3cYwdfQx4</sessionId></SessionHeader></env:Header><env:Body><getUpdated xmlns="urn:tooling.soap.sforce.com"><sObjectType>StaticResource</sObjectType><start>2014-01-20T17:31:41.648Z</start><end>2014-01-20T17:31:41.648Z</end></getUpdated></env:Body></env:Envelope>
    //17:31:41.203 (203161000)|CALLOUT_REQUEST|[2494]|getUpdated_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), end_x=2014-01-20 17:31:41, end_x_type_info=(end, urn:tooling.soap.sforce.com, null, 1, 1, false), field_order_type_info=(sObjectType, start, end_x), sObjectType=StaticResource, sObjectType_type_info=(sObjectType, urn:tooling.soap.sforce.com, null, 1, 1, false), start=2014-01-20 17:31:41, start_type_info=(start, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:31:41.289 (289849000)|CALLOUT_RESPONSE|[2494]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><getUpdatedResponse><result><latestDateCovered>2014-01-20T17:31:00.000Z</latestDateCovered></result></getUpdatedResponse></soapenv:Body></soapenv:Envelope>
    public class GetUpdatedMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.getUpdatedResponse_element responseElement = new ToolingService.getUpdatedResponse_element();
            responseElement.result = new ToolingService.GetUpdatedResult();
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverGetUpdated() {
        Test.setMock(WebServiceMock.class, new GetUpdatedMock());
        Object result = new ToolingService.Client().getUpdated('StaticResource', System.now(), System.now());
        System.assert(result instanceof ToolingService.GetUpdatedResult);
    }
    
    //17:39:10.534 (534216000)|CALLOUT_REQUEST|[2515]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQOsEgWb60aKf1rtPw8w7VwwpvgHMsmyzDqlHtde1nz3NIpAgaXdTQcq0Y_I7nkUoM206qHd79kCphCbajpd3cYwdfQx4</sessionId></SessionHeader></env:Header><env:Body><invalidateSessions xmlns="urn:tooling.soap.sforce.com"><ArrayList>00Db0000000d6mj!AQwAQITRJjn7LVOb51nusnNi3LDgmbuG5lCAmaH1w7Yxu.rsdHijLTe83onPVZbf43BMv_iAg1wseNlhT2F7hVVhFuAIY9Qk</ArrayList></invalidateSessions></env:Body></env:Envelope>
    //17:39:10.534 (534291000)|CALLOUT_REQUEST|[2515]|invalidateSessions_element:[ArrayList=(00Db0000000d6mj!AQwAQITRJjn7LVOb51nusnNi3LDgmbuG5lCAmaH1w7Yxu.rsdHijLTe83onPVZbf43BMv_iAg1wseNlhT2F7hVVhFuAIY9Qk), ArrayList_type_info=(ArrayList, urn:tooling.soap.sforce.com, null, 0, -1, false), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(ArrayList)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:39:10.603 (603448000)|CALLOUT_RESPONSE|[2515]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><invalidateSessionsResponse><result><success>true</success></result></invalidateSessionsResponse></soapenv:Body></soapenv:Envelope>
    public class InvalidateSessionsMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.invalidateSessionsResponse_element responseElement = new ToolingService.invalidateSessionsResponse_element();
            responseElement.result = new List<ToolingService.InvalidateSessionsResult>{new ToolingService.InvalidateSessionsResult()};
            responseElement.result[0].errors = new List<ToolingService.Error>{new ToolingService.Error()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverInvalidateSessions() {
        Test.setMock(WebServiceMock.class, new InvalidateSessionsMock());
        Object result = new ToolingService.Client().invalidateSessions(new List<String>{UserInfo.getSessionId()});
        System.assert(result instanceof List<ToolingService.InvalidateSessionsResult>);
    }
    
    //17:46:25.470 (470225000)|CALLOUT_REQUEST|[2536]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects><Id>00Nb0000007p4tE</Id></sObjects></create></env:Body></env:Envelope>
    //17:46:25.470 (470339000)|CALLOUT_REQUEST|[2536]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(sObject_x:[Id=00Nb0000007p4tE, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:46:25.592 (592774000)|CALLOUT_RESPONSE|[2536]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sf="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><soapenv:Fault><faultcode>sf:INVALID_TYPE</faultcode><faultstring>INVALID_TYPE: Must send a concrete entity type.</faultstring><detail><sf:InvalidSObjectFault xsi:type="sf:InvalidSObjectFault"><sf:exceptionCode>INVALID_TYPE</sf:exceptionCode><sf:exceptionMessage>Must send a concrete entity type.</sf:exceptionMessage><sf:row>-1</sf:row><sf:column>-1</sf:column></sf:InvalidSObjectFault></detail></soapenv:Fault></soapenv:Body></soapenv:Envelope>
    public class CreateMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            responseElement.result[0].errors = new List<ToolingService.Error>{new ToolingService.Error()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverCreate() {
        Test.setMock(WebServiceMock.class, new CreateMock());
        ToolingService.sObject_x obj = new ToolingService.sObject_x();
        obj.Id = '00Nb0000007p4tE';
        Object result = new ToolingService.Client().create(new List<ToolingService.sObject_x>{obj});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //17:54:45.381 (381826000)|CALLOUT_REQUEST|[2557]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><describeSObjects xmlns="urn:tooling.soap.sforce.com"><types>CustomField</types></describeSObjects></env:Body></env:Envelope>
    //17:54:45.381 (381893000)|CALLOUT_REQUEST|[2557]|describeSObjects_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(types), types=(CustomField), types_type_info=(types, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:54:45.506 (506279000)|CALLOUT_RESPONSE|[2557]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><describeSObjectsResponse><result><activateable>false</activateable><createable>true</createable><custom>false</custom><customSetting>false</customSetting><deletable>false</deletable><deprecatedAndHidden>false</deprecatedAndHidden><feedEnabled>false</feedEnabled><fields><autoNumber>false</autoNumber><byteLength>18</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>false</createable><custom>false</custom><defaultedOnCreate>true</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>true</idLookup><label>Custom Field Definition ID</label><length>18</length><name>Id</name><nameField>false</nameField><namePointing>false</namePointing><nillable>false</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>tns:ID</soapType><sortable>true</sortable><type>id</type><unique>false</unique><updateable>false</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>120</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>true</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Entity Enumeration Or ID</label><length>40</length><name>TableEnumOrId</name><nameField>false</nameField><namePointing>false</namePointing><nillable>false</nillable><permissionable>false</permissionable><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Account</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Activity</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Asset</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Campaign</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>CampaignMember</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Case</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Contact</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>ContentVersion</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Contract</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Idea</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Lead</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Opportunity</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>OpportunityLineItem</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Pricebook2</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Product2</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>Solution</value></picklistValues><picklistValues><active>true</active><defaultValue>false</defaultValue><label xsi:nil="true"/><value>User</value></picklistValues><precision>0</precision><restrictedPicklist>true</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>true</sortable><type>picklist</type><unique>false</unique><updateable>false</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>120</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>true</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Field Name</label><length>40</length><name>DeveloperName</name><nameField>true</nameField><namePointing>false</namePointing><nillable>false</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>true</sortable><type>string</type><unique>false</unique><updateable>true</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>45</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>false</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>true</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Namespace Prefix</label><length>15</length><name>NamespacePrefix</name><nameField>false</nameField><namePointing>false</namePointing><nillable>true</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>true</sortable><type>string</type><unique>false</unique><updateable>false</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>0</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>true</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>false</filterable><groupable>false</groupable><idLookup>false</idLookup><label>Custom Field Definition Metadata</label><length>0</length><name>Metadata</name><nameField>false</nameField><namePointing>false</namePointing><nillable>true</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>urn:CustomFieldMetadata</soapType><sortable>false</sortable><type>complexvalue</type><unique>false</unique><updateable>true</updateable></fields><fields><autoNumber>false</autoNumber><byteLength>240</byteLength><calculated>false</calculated><caseSensitive>false</caseSensitive><createable>false</createable><custom>false</custom><defaultedOnCreate>false</defaultedOnCreate><deprecatedAndHidden>false</deprecatedAndHidden><digits>0</digits><filterable>false</filterable><groupable>true</groupable><idLookup>false</idLookup><label>Metadata API Full Name</label><length>80</length><name>FullName</name><nameField>false</nameField><namePointing>false</namePointing><nillable>true</nillable><permissionable>false</permissionable><precision>0</precision><restrictedPicklist>false</restrictedPicklist><scale>0</scale><soapType>xsd:string</soapType><sortable>false</sortable><type>string</type><unique>false</unique><updateable>false</updateable></fields><keyPrefix>00N</keyPrefix><label>Custom Field Definition</label><labelPlural>Custom Field Definitions</labelPlural><layoutable>false</layoutable><mergeable>false</mergeable><name>CustomField</name><queryable>true</queryable><replicateable>false</replicateable><retrieveable>true</retrieveable><searchable>false</searchable><undeletable>false</undeletable><updateable>true</updateable></result></describeSObjectsResponse></soapenv:Body></soapenv:Envelope>
    public class DescribeSObjectsMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.describeSObjectsResponse_element responseElement = new ToolingService.describeSObjectsResponse_element();
            responseElement.result = new List<ToolingService.DescribeSObjectResult>{new ToolingService.DescribeSObjectResult()};
            responseElement.result[0].childRelationships = new List<ToolingService.ChildRelationship>{new ToolingService.ChildRelationship()};
            responseElement.result[0].fields = new List<ToolingService.Field>{new ToolingService.Field()};
            responseElement.result[0].recordTypeInfos = new List<ToolingService.RecordTypeInfo>{new ToolingService.RecordTypeInfo()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverDescribeSObjects() {
        Test.setMock(WebServiceMock.class, new DescribeSObjectsMock());
        Object result = new ToolingService.Client().describeSObjects(new List<String>{'CustomField'});
        System.assert(result instanceof List<ToolingService.DescribeSObjectResult>);
    }
    
    //17:59:56.534 (534786000)|CALLOUT_REQUEST|[2578]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><describeWorkitemActions xmlns="urn:tooling.soap.sforce.com"><workitemIds>000000000000000AAA</workitemIds></describeWorkitemActions></env:Body></env:Envelope>
    //17:59:56.534 (534864000)|CALLOUT_REQUEST|[2578]|describeWorkitemActions_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(workitemIds), workitemIds=(000000000000000AAA), workitemIds_type_info=(workitemIds, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //17:59:56.706 (706727000)|CALLOUT_RESPONSE|[2578]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><describeWorkitemActionsResponse><result><errors><message>invalid cross reference id</message><statusCode>INVALID_CROSS_REFERENCE_KEY</statusCode></errors><success>false</success><targetObjectId xsi:nil="true"/><workitemId>000000000000000</workitemId></result></describeWorkitemActionsResponse></soapenv:Body></soapenv:Envelope>
    public class DescribeWorkitemActionsMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.describeWorkitemActionsResponse_element responseElement = new ToolingService.describeWorkitemActionsResponse_element();
            responseElement.result = new List<ToolingService.DescribeWorkitemActionResult>{new ToolingService.DescribeWorkitemActionResult()};
            responseElement.result[0].actions = new List<ToolingService.AllowedWorkitemAction>{new ToolingService.AllowedWorkitemAction()};
            responseElement.result[0].errors = new List<ToolingService.Error>{new ToolingService.Error()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverDescribeWorkitemActions() {
        Test.setMock(WebServiceMock.class, new DescribeWorkitemActionsMock());
        Object result = new ToolingService.Client().describeWorkitemActions(new List<String>{'000000000000000AAA'});
        System.assert(result instanceof List<ToolingService.DescribeWorkitemActionResult>);
    }
    
    //18:03:15.513 (513326000)|CALLOUT_REQUEST|[2598]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><getServerTimestamp xmlns="urn:tooling.soap.sforce.com" /></env:Body></env:Envelope>
    //18:03:15.513 (513381000)|CALLOUT_REQUEST|[2598]|getServerTimestamp_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=()]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //18:03:15.541 (541118000)|CALLOUT_RESPONSE|[2598]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><getServerTimestampResponse><result><timestamp>2014-01-20T18:03:15.553Z</timestamp></result></getServerTimestampResponse></soapenv:Body></soapenv:Envelope>
    public class GetServerTimestampMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.getServerTimestampResponse_element responseElement = new ToolingService.getServerTimestampResponse_element();
            responseElement.result = new ToolingService.GetServerTimestampResult();
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverGetServerTimestamp() {
        Test.setMock(WebServiceMock.class, new GetServerTimestampMock());
        Object result = new ToolingService.Client().getServerTimestamp();
        System.assert(result instanceof ToolingService.GetServerTimestampResult);
    }
    
    //18:12:38.495 (495753000)|CALLOUT_REQUEST|[2618]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><getUserInfo xmlns="urn:tooling.soap.sforce.com" /></env:Body></env:Envelope>
    //18:12:38.495 (495809000)|CALLOUT_REQUEST|[2618]|getUserInfo_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=()]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //18:12:38.666 (666936000)|CALLOUT_RESPONSE|[2618]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><getUserInfoResponse><result><accessibilityMode>false</accessibilityMode><currencySymbol>€</currencySymbol><orgAttachmentFileSizeLimit>5242880</orgAttachmentFileSizeLimit><orgDefaultCurrencyIsoCode>EUR</orgDefaultCurrencyIsoCode><orgDisallowHtmlAttachments>false</orgDisallowHtmlAttachments><orgHasPersonAccounts>false</orgHasPersonAccounts><organizationId>00Db0000000d6mjEAA</organizationId><organizationMultiCurrency>false</organizationMultiCurrency><organizationName>BIGASSFORCE.COM LTD</organizationName><profileId>00eb0000000xaqCAAQ</profileId><roleId xsi:nil="true"/><sessionSecondsValid>7200</sessionSecondsValid><userDefaultCurrencyIsoCode xsi:nil="true"/><userEmail>matt@countryskippers.com</userEmail><userFullName>Matt Bingham</userFullName><userId>005b0000000vzw0AAA</userId><userLanguage>en_US</userLanguage><userLocale>en_GB</userLocale><userName>matt@99demo.com</userName><userTimeZone>Europe/London</userTimeZone><userType>Standard</userType><userUiSkin>Theme3</userUiSkin></result></getUserInfoResponse></soapenv:Body></soapenv:Envelope>
    public class GetUserInfoMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.getUserInfoResponse_element responseElement = new ToolingService.getUserInfoResponse_element();
            responseElement.result = new ToolingService.GetUserInfoResult();
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverGetUserInfo() {
        Test.setMock(WebServiceMock.class, new GetUserInfoMock());
        Object result = new ToolingService.Client().getUserInfo();
        System.assert(result instanceof ToolingService.GetUserInfoResult);
    }
    
    //18:16:51.520 (520993000)|CALLOUT_REQUEST|[2639]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><queryAll xmlns="urn:tooling.soap.sforce.com"><queryString>SELECT Id FROM CustomField</queryString></queryAll></env:Body></env:Envelope>
    //18:16:51.521 (521065000)|CALLOUT_REQUEST|[2639]|queryAll_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryString), queryString=SELECT Id FROM CustomField, queryString_type_info=(queryString, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //18:16:51.646 (646312000)|CALLOUT_RESPONSE|[2639]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><queryAllResponse><result><done>true</done><entityTypeName>CustomFieldDefinition</entityTypeName><queryLocator xsi:nil="true"/><records xsi:type="CustomField"><Id>00Nb0000007p4tEEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tFEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tGEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tHEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tIEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tJEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tKEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tLEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tMEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tNEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tOEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tPEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tQEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tREAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tSEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tTEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tUEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tVEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tWEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tXEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tYEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4tZEAQ</Id></records><records xsi:type="CustomField"><Id>00Nb0000007p4taEAA</Id></records><size>23</size><totalSize>23</totalSize></result></queryAllResponse></soapenv:Body></soapenv:Envelope>
    public class QueryAllMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryAllResponse_element responseElement = new ToolingService.queryAllResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            responseElement.result.records = new List<ToolingService.sObject_x>{new ToolingService.sObject_x()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverQueryAll() {
        Test.setMock(WebServiceMock.class, new QueryAllMock());
        Object result = new ToolingService.Client().queryAll('SELECT Id FROM CustomField');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //19:58:05.239 (239981000)|CALLOUT_REQUEST|[2442]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><update xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="CustomField"><Id>00Nb0000007p4tE</Id><DeveloperName>ActiveDerp</DeveloperName><FullName xsi:nil="true" /><Metadata xsi:nil="true" /><NamespacePrefix xsi:nil="true" /><TableEnumOrId xsi:nil="true" /></sObjects></update></env:Body></env:Envelope>
    //19:58:05.240 (240154000)|CALLOUT_REQUEST|[2442]|update_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(CustomField:[DeveloperName=ActiveDerp, DeveloperName_type_info=(DeveloperName, urn:tooling.soap.sforce.com, null, 0, 1, true), FullName=null, FullName_type_info=(FullName, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=00Nb0000007p4tE, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), Metadata=null, Metadata_type_info=(Metadata, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), TableEnumOrId=null, TableEnumOrId_type_info=(TableEnumOrId, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, DeveloperName, FullName, Metadata, NamespacePrefix, TableEnumOrId), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=CustomField, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //19:58:05.582 (582684000)|CALLOUT_RESPONSE|[2442]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><updateResponse><result><id>00Nb0000007p4tEEAQ</id><success>true</success></result></updateResponse></soapenv:Body></soapenv:Envelope>
    public class CustomFieldMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.updateResponse_element responseElement = new ToolingService.updateResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void coverCustomField() {
        Test.setMock(WebServiceMock.class, new CustomFieldMock());
        ToolingService.CustomField customField = new ToolingService.CustomField();
        customField.Id = '00Nb0000007p4tE';
        customField.FullName = 'Active';
        customField.DeveloperName = 'Active';
        customField.Metadata = new ToolingService.CustomFieldMetadata();
        customField.Metadata.picklist = new ToolingService.Picklist();
        customField.Metadata.summaryFilterItems = new List<ToolingService.FilterItem>{new ToolingService.FilterItem()};
        Object result = new ToolingService.Client().update_x(new List<ToolingService.sObject_x>{customField});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //22:03:57.371 (371011000)|CALLOUT_REQUEST|[2562]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ApexClass"><Id xsi:nil="true" /><ApiVersion xsi:nil="true" /><Body>public class MyClass {}</Body><BodyCrc xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><FullName xsi:nil="true" /><IsValid xsi:nil="true" /><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><LengthWithoutComments xsi:nil="true" /><Metadata xsi:nil="true" /><Name xsi:nil="true" /><NamespacePrefix xsi:nil="true" /><Status xsi:nil="true" /><SymbolTable xsi:nil="true" /><SystemModstamp xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //22:03:57.371 (371210000)|CALLOUT_REQUEST|[2562]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ApexClass:[ApiVersion=null, ApiVersion_type_info=(ApiVersion, urn:tooling.soap.sforce.com, null, 0, 1, true), Body=public class MyClass {}, BodyCrc=null, BodyCrc_type_info=(BodyCrc, urn:tooling.soap.sforce.com, null, 0, 1, true), Body_type_info=(Body, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), FullName=null, FullName_type_info=(FullName, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), IsValid=null, IsValid_type_info=(IsValid, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), LengthWithoutComments=null, LengthWithoutComments_type_info=(LengthWithoutComments, urn:tooling.soap.sforce.com, null, 0, 1, true), Metadata=null, Metadata_type_info=(Metadata, urn:tooling.soap.sforce.com, null, 0, 1, true), Name=null, Name_type_info=(Name, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), Status=null, Status_type_info=(Status, urn:tooling.soap.sforce.com, null, 0, 1, true), SymbolTable=null, SymbolTable_type_info=(SymbolTable, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, ApiVersion, Body, BodyCrc, CreatedBy, CreatedById, CreatedDate, FullName, IsValid, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ApexClass, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //22:03:57.618 (618314000)|CALLOUT_RESPONSE|[2562]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><createResponse><result><id>01pb00000036IobAAE</id><success>true</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ApexClassMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexClass() {
        Test.setMock(WebServiceMock.class, new ApexClassMock());
        ToolingService.ApexClass apex = new ToolingService.ApexClass();
        apex.Body = 'public class MyClass {}';
        apex.CreatedBy = new ToolingService.User_x();
        apex.LastModifiedBy = new ToolingService.User_x();
        apex.Metadata = new ToolingService.ApexClassMetadata();
        apex.Metadata.packageVersions = new List<ToolingService.PackageVersionMetadata>{new ToolingService.PackageVersionMetadata()};
        apex.SymbolTable = new ToolingService.SymbolTable();
        Object result = new ToolingService.Client().create(new List<ToolingService.ApexClass>{apex});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //22:58:53.268 (268068000)|CALLOUT_REQUEST|[2422]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><query xmlns="urn:tooling.soap.sforce.com"><queryString>SELECT Id FROM ApexClassMember</queryString></query></env:Body></env:Envelope>
    //22:58:53.268 (268140000)|CALLOUT_REQUEST|[2422]|query_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryString), queryString=SELECT Id FROM ApexClassMember, queryString_type_info=(queryString, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //22:58:53.331 (331053000)|CALLOUT_RESPONSE|[2422]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><queryResponse><result><done>true</done><entityTypeName>ApexClassMember</entityTypeName><queryLocator xsi:nil="true"/><records xsi:type="ApexClassMember"><Id>400b00000000FQpAAM</Id></records><records xsi:type="ApexClassMember"><Id>400b00000000FQuAAM</Id></records><records xsi:type="ApexClassMember"><Id>400b00000000FR4AAM</Id></records><size>3</size><totalSize>3</totalSize></result></queryResponse></soapenv:Body></soapenv:Envelope>
    public class ApexClassMemberMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryResponse_element responseElement = new ToolingService.queryResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            ToolingService.ApexClassMember apexClassMember = new ToolingService.ApexClassMember();
            apexClassMember.ContentEntity = new ToolingService.ApexClass();
            apexClassMember.CreatedBy = new ToolingService.User_x();
            apexClassMember.LastModifiedBy = new ToolingService.User_x();
            apexClassMember.Metadata = new ToolingService.ApexClassMetadata();
            apexClassMember.MetadataContainer = new ToolingService.MetadataContainer();
            apexClassMember.SymbolTable = new ToolingService.SymbolTable();
            responseElement.result.records = new List<ToolingService.ApexClassMember>{apexClassMember};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexClassMember() {
        Test.setMock(WebServiceMock.class, new ApexClassMemberMock());
        Object result = new ToolingService.Client().query('SELECT Id FROM ApexClassMember');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //23:04:54.329 (329212000)|CALLOUT_REQUEST|[2422]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><query xmlns="urn:tooling.soap.sforce.com"><queryString>SELECT Id FROM ApexCodeCoverage</queryString></query></env:Body></env:Envelope>
    //23:04:54.329 (329271000)|CALLOUT_REQUEST|[2422]|query_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryString), queryString=SELECT Id FROM ApexCodeCoverage, queryString_type_info=(queryString, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //23:04:54.445 (445179000)|CALLOUT_RESPONSE|[2422]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><queryResponse><result><done>true</done><entityTypeName>ApexCodeCoverage</entityTypeName><queryLocator xsi:nil="true"/><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaANAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaA8AAK</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaA9AAK</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAAAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaABAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaACAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaADAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAEAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAFAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAGAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAHAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAIAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAJAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAKAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaALAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAMAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAOAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAPAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAQAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaARAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaASAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaATAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAUAA0</Id></records><records xsi:type="ApexCodeCoverage"><Id>714b0000007JaAVAA0</Id></records><size>24</size><totalSize>24</totalSize></result></queryResponse></soapenv:Body></soapenv:Envelope>
    public class ApexCodeCoverageMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryResponse_element responseElement = new ToolingService.queryResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            ToolingService.ApexCodeCoverage apexCodeCoverage = new ToolingService.ApexCodeCoverage();
            apexCodeCoverage.ApexClassOrTrigger = new ToolingService.Name();
            apexCodeCoverage.ApexTestClass = new ToolingService.ApexClass();
            apexCodeCoverage.Coverage = new ToolingService.Coverage();
            apexCodeCoverage.CreatedBy = new ToolingService.User_x();
            apexCodeCoverage.LastModifiedBy = new ToolingService.User_x();
            responseElement.result.records = new List<ToolingService.ApexCodeCoverage>{apexCodeCoverage};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexCodeCoverage() {
        Test.setMock(WebServiceMock.class, new ApexCodeCoverageMock());
        Object result = new ToolingService.Client().query('SELECT Id FROM ApexCodeCoverage');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //00:16:42.409 (409119000)|CALLOUT_REQUEST|[2434]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><query xmlns="urn:tooling.soap.sforce.com"><queryString>SELECT Id FROM ApexCodeCoverageAggregate</queryString></query></env:Body></env:Envelope>
    //00:16:42.409 (409181000)|CALLOUT_REQUEST|[2434]|query_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryString), queryString=SELECT Id FROM ApexCodeCoverageAggregate, queryString_type_info=(queryString, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //00:16:42.533 (533478000)|CALLOUT_RESPONSE|[2434]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><queryResponse><result><done>true</done><entityTypeName>ApexCodeCoverageAggregate</entityTypeName><queryLocator xsi:nil="true"/><records xsi:type="ApexCodeCoverageAggregate"><Id>715b0000005uOqVAAU</Id></records><records xsi:type="ApexCodeCoverageAggregate"><Id>715b0000005uOqWAAU</Id></records><size>2</size><totalSize>2</totalSize></result></queryResponse></soapenv:Body></soapenv:Envelope>
    public class ApexCodeCoverageAggregateMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryResponse_element responseElement = new ToolingService.queryResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            ToolingService.ApexCodeCoverageAggregate apexCodeCoverageAggregate = new ToolingService.ApexCodeCoverageAggregate();
            apexCodeCoverageAggregate.ApexClassOrTrigger = new ToolingService.Name();
            apexCodeCoverageAggregate.Coverage = new ToolingService.Coverage();
            apexCodeCoverageAggregate.CreatedBy = new ToolingService.User_x();
            apexCodeCoverageAggregate.LastModifiedBy = new ToolingService.User_x();
            responseElement.result.records = new List<ToolingService.ApexCodeCoverageAggregate>{apexCodeCoverageAggregate};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexCodeCoverageAggregate() {
        Test.setMock(WebServiceMock.class, new ApexCodeCoverageAggregateMock());
        Object result = new ToolingService.Client().query('SELECT Id FROM ApexCodeCoverageAggregate');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //00:27:21.303 (303781000)|CALLOUT_REQUEST|[2610]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ApexComponent"><Id xsi:nil="true" /><ApiVersion xsi:nil="true" /><ControllerKey xsi:nil="true" /><ControllerType xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><Description xsi:nil="true" /><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><Markup>&lt;apex:component /></Markup><MasterLabel>MyComponent</MasterLabel><Name>MyComponent</Name><NamespacePrefix xsi:nil="true" /><SystemModstamp xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //00:27:21.304 (304058000)|CALLOUT_REQUEST|[2610]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ApexComponent:[ApiVersion=null, ApiVersion_type_info=(ApiVersion, urn:tooling.soap.sforce.com, null, 0, 1, true), ControllerKey=null, ControllerKey_type_info=(ControllerKey, urn:tooling.soap.sforce.com, null, 0, 1, true), ControllerType=null, ControllerType_type_info=(ControllerType, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Description=null, Description_type_info=(Description, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Markup=<apex:component />, Markup_type_info=(Markup, urn:tooling.soap.sforce.com, null, 0, 1, true), MasterLabel=MyComponent, MasterLabel_type_info=(MasterLabel, urn:tooling.soap.sforce.com, null, 0, 1, true), Name=MyComponent, Name_type_info=(Name, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, ApiVersion, ControllerKey, ControllerType, CreatedBy, CreatedById, CreatedDate, Description, LastModifiedBy, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ApexComponent, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //00:27:21.428 (428764000)|CALLOUT_RESPONSE|[2610]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><createResponse><result><id>099b0000000PW75AAG</id><success>true</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ApexComponentMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexComponent() {
        Test.setMock(WebServiceMock.class, new ApexComponentMock());
        ToolingService.ApexComponent apexComponent = new ToolingService.ApexComponent();
        apexComponent.Name = 'MyComponent';
        apexComponent.MasterLabel = 'MyComponent';
        apexComponent.Markup = '<apex:component />';
        Object result = new ToolingService.Client().create(new List<ToolingService.ApexComponent>{apexComponent});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //00:35:51.237 (237347000)|CALLOUT_REQUEST|[2622]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ApexExecutionOverlayAction"><Id xsi:nil="true" /><ActionScript>System.debug(false);</ActionScript><ActionScriptType xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><ExecutableEntity xsi:nil="true" /><ExecutableEntityId>01pb000000356pc</ExecutableEntityId><ExpirationDate xsi:nil="true" /><IsDeleted xsi:nil="true" /><IsDumpingHeap xsi:nil="true" /><Iteration>1</Iteration><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><Line>1</Line><Scope xsi:nil="true" /><ScopeId xsi:nil="true" /><SystemModstamp xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //00:35:51.237 (237605000)|CALLOUT_REQUEST|[2622]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ApexExecutionOverlayAction:[ActionScript=System.debug(false);, ActionScriptType=null, ActionScriptType_type_info=(ActionScriptType, urn:tooling.soap.sforce.com, null, 0, 1, true), ActionScript_type_info=(ActionScript, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), ExecutableEntity=null, ExecutableEntityId=01pb000000356pc, ExecutableEntityId_type_info=(ExecutableEntityId, urn:tooling.soap.sforce.com, null, 0, 1, true), ExecutableEntity_type_info=(ExecutableEntity, urn:tooling.soap.sforce.com, null, 0, 1, true), ExpirationDate=null, ExpirationDate_type_info=(ExpirationDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), IsDeleted=null, IsDeleted_type_info=(IsDeleted, urn:tooling.soap.sforce.com, null, 0, 1, true), IsDumpingHeap=null, IsDumpingHeap_type_info=(IsDumpingHeap, urn:tooling.soap.sforce.com, null, 0, 1, true), Iteration=1, Iteration_type_info=(Iteration, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Line=1, Line_type_info=(Line, urn:tooling.soap.sforce.com, null, 0, 1, true), Scope=null, ScopeId=null, ScopeId_type_info=(ScopeId, urn:tooling.soap.sforce.com, null, 0, 1, true), Scope_type_info=(Scope, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, ActionScript, ActionScriptType, CreatedBy, CreatedById, CreatedDate, ExecutableEntity, ExecutableEntityId, ExpirationDate, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ApexExecutionOverlayAction, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //00:35:51.295 (295619000)|CALLOUT_RESPONSE|[2622]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><createResponse><result><id>1dob0000000GnMNAA0</id><success>true</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ApexExecutionOverlayActionMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexExecutionOverlayAction() {
        Test.setMock(WebServiceMock.class, new ApexExecutionOverlayActionMock());
        ToolingService.ApexExecutionOverlayAction apexExecutionOverlayAction = new ToolingService.ApexExecutionOverlayAction();
        apexExecutionOverlayAction.ActionScript = 'System.debug(false);';
        apexExecutionOverlayAction.ExecutableEntityId = '01pb000000356pc';
        apexExecutionOverlayAction.Line = 1;
        apexExecutionOverlayAction.Iteration = 1;
        apexExecutionOverlayAction.CreatedBy = new ToolingService.User_x();
        apexExecutionOverlayAction.LastModifiedBy = new ToolingService.User_x();
        apexExecutionOverlayAction.Scope = new ToolingService.User_x();
        Object result = new ToolingService.Client().create(new List<ToolingService.ApexExecutionOverlayAction>{apexExecutionOverlayAction});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //00:46:35.354 (354029000)|CALLOUT_REQUEST|[2470]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><query xmlns="urn:tooling.soap.sforce.com"><queryString>SELECT Id FROM ApexExecutionOverlayResult</queryString></query></env:Body></env:Envelope>
    //00:46:35.354 (354092000)|CALLOUT_REQUEST|[2470]|query_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryString), queryString=SELECT Id FROM ApexExecutionOverlayResult, queryString_type_info=(queryString, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //00:46:35.431 (431351000)|CALLOUT_RESPONSE|[2470]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><queryResponse><result><done>true</done><entityTypeName xsi:nil="true"/><queryLocator xsi:nil="true"/><size>0</size><totalSize>0</totalSize></result></queryResponse></soapenv:Body></soapenv:Envelope>
    public class ApexExecutionOverlayResultMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryResponse_element responseElement = new ToolingService.queryResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            ToolingService.ApexExecutionOverlayResult apexExecutionOverlayResult = new ToolingService.ApexExecutionOverlayResult();
            apexExecutionOverlayResult.ApexResult = new ToolingService.ApexResult();
            apexExecutionOverlayResult.ApexResult.apexExecutionResult = new ToolingService.ExecuteAnonymousResult();
            apexExecutionOverlayResult.CreatedBy = new ToolingService.User_x();
            apexExecutionOverlayResult.HeapDump = new ToolingService.HeapDump();
            apexExecutionOverlayResult.HeapDump.extents = new List<ToolingService.TypeExtent>{new ToolingService.TypeExtent()};
            apexExecutionOverlayResult.HeapDump.extents[0].definition = new List<ToolingService.AttributeDefinition>{new ToolingService.AttributeDefinition()};
            apexExecutionOverlayResult.HeapDump.extents[0].extent = new List<ToolingService.HeapAddress>{new ToolingService.HeapAddress()};
            apexExecutionOverlayResult.HeapDump.extents[0].extent[0].value = new ToolingService.StateValue();
            apexExecutionOverlayResult.LastModifiedBy = new ToolingService.User_x();
            apexExecutionOverlayResult.RequestedBy = new ToolingService.User_x();
            apexExecutionOverlayResult.SOQLResult = new ToolingService.SOQLResult();
            apexExecutionOverlayResult.SOQLResult.queryMetadata = new ToolingService.QueryResultMetadata();
            apexExecutionOverlayResult.SOQLResult.queryResult = new List<ToolingService.MapValue>{new ToolingService.MapValue()};
            apexExecutionOverlayResult.SOQLResult.queryResult[0].entry = new List<ToolingService.MapEntry>{new ToolingService.MapEntry()};
            apexExecutionOverlayResult.SOQLResult.queryResult[0].entry[0].value = new ToolingService.StateValue();
            apexExecutionOverlayResult.User_x = new ToolingService.Name();
            responseElement.result.records = new List<ToolingService.ApexExecutionOverlayResult>{apexExecutionOverlayResult};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexExecutionOverlayResult() {
        Test.setMock(WebServiceMock.class, new ApexCodeCoverageMock());
        Object result = new ToolingService.Client().query('SELECT Id FROM ApexExecutionOverlayResult');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //00:58:10.543 (543449000)|CALLOUT_REQUEST|[2482]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><query xmlns="urn:tooling.soap.sforce.com"><queryString>SELECT Id FROM ApexLog</queryString></query></env:Body></env:Envelope>
    //00:58:10.543 (543509000)|CALLOUT_REQUEST|[2482]|query_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(queryString), queryString=SELECT Id FROM ApexLog, queryString_type_info=(queryString, urn:tooling.soap.sforce.com, null, 1, 1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //00:58:10.625 (625842000)|CALLOUT_RESPONSE|[2482]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><queryResponse><result><done>true</done><entityTypeName>ApexLog</entityTypeName><queryLocator xsi:nil="true"/><records xsi:type="ApexLog"><Id>07Lb000000GqV2qEAF</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqV4kEAF</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqV5TEAV</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqV6PEAV</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqV9KEAV</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVAaEAN</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVAtEAN</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVDUEA3</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVDfEAN</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVDtEAN</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVFuEAN</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVIQEA3</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVLEEA3</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVMSEA3</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVMvEAN</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVNUEA3</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVmZEAV</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVtkEAF</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqVvREAV</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqXySEAV</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqZJsEAN</Id></records><records xsi:type="ApexLog"><Id>07Lb000000GqZSJEA3</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HOwOFEA1</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HOwQuEAL</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwdCZEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwdEmEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwdKyEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwdflEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwdseEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwdsuEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwdyGEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwe0pEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwe5nEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwe6bEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweAHEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweDPEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweJXEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweR2EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweSkEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweULEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweUrEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwebxEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwecGEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweiwEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwesDEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwetVEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HweujEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwezREAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwf2JEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwf46EAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwf6vEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfAlEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfH7EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfHpEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfJyEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfKoEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfLYEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfOZEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfRDEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfhnEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwfjQEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwflPEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwg2NEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwgE3EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwgIDEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwgQ5EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwgQvEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwgVPEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwga0EAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwgnmEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwgnpEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwh1UEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwh4OEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhBnEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhStEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhV0EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhVEEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhVGEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhVgEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhaJEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhiuEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhjtEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwhk4EAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhmfEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwhnWEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwhu8EAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwhy5EAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwiA1EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwiR6EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwiRkEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwiV1EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwiYyEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwiecEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwiejEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwigTEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwjsAEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwkKUEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwlMfEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwlXHEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwlpoEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwlr2EAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmFyEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmGhEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmNWEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmXPEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmXXEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmY7EAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmciEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmfTEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwmhEEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwnELEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwnqrEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwnrqEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwnsKEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwnvgEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwnvjEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwnxjEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwo7NEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwo8AEAR</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwo8cEAB</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwoFXEAZ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000HwoGtEAJ</Id></records><records xsi:type="ApexLog"><Id>07Lb000000Hwob9EAB</Id></records><size>123</size><totalSize>123</totalSize></result></queryResponse></soapenv:Body></soapenv:Envelope>
    public class ApexLogMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.queryResponse_element responseElement = new ToolingService.queryResponse_element();
            responseElement.result = new ToolingService.QueryResult();
            ToolingService.ApexLog apexLog = new ToolingService.ApexLog();
            apexLog.LogUser = new ToolingService.Name();
            responseElement.result.records = new List<ToolingService.ApexLog>{apexLog};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexLog() {
        Test.setMock(WebServiceMock.class, new ApexLogMock());
        Object result = new ToolingService.Client().query('SELECT Id FROM ApexLog');
        System.assert(result instanceof ToolingService.QueryResult);
    }
    
    //01:06:31.286 (286226000)|CALLOUT_REQUEST|[2658]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQIGQ6U70E7eCp4z1WwWJQbiLaJI3zEcqlRn2X2s.PS7HICc3AbMkMEAfTNwcOCxQfd0gPW55t4cjhCd2nX0Xo9JDblhA</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ApexPage"><Id xsi:nil="true" /><ApiVersion xsi:nil="true" /><ControllerKey xsi:nil="true" /><ControllerType xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><Description xsi:nil="true" /><IsAvailableInTouch xsi:nil="true" /><IsConfirmationTokenRequired xsi:nil="true" /><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><Markup>&lt;apex:page /></Markup><MasterLabel>MyPage</MasterLabel><Name>MyPage</Name><NamespacePrefix xsi:nil="true" /><SystemModstamp xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //01:06:31.286 (286514000)|CALLOUT_REQUEST|[2658]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ApexPage:[ApiVersion=null, ApiVersion_type_info=(ApiVersion, urn:tooling.soap.sforce.com, null, 0, 1, true), ControllerKey=null, ControllerKey_type_info=(ControllerKey, urn:tooling.soap.sforce.com, null, 0, 1, true), ControllerType=null, ControllerType_type_info=(ControllerType, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Description=null, Description_type_info=(Description, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), IsAvailableInTouch=null, IsAvailableInTouch_type_info=(IsAvailableInTouch, urn:tooling.soap.sforce.com, null, 0, 1, true), IsConfirmationTokenRequired=null, IsConfirmationTokenRequired_type_info=(IsConfirmationTokenRequired, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Markup=<apex:page />, Markup_type_info=(Markup, urn:tooling.soap.sforce.com, null, 0, 1, true), MasterLabel=MyPage, MasterLabel_type_info=(MasterLabel, urn:tooling.soap.sforce.com, null, 0, 1, true), Name=MyPage, Name_type_info=(Name, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, ApiVersion, ControllerKey, ControllerType, CreatedBy, CreatedById, CreatedDate, Description, IsAvailableInTouch, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ApexPage, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //01:06:31.367 (367598000)|CALLOUT_RESPONSE|[2658]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><createResponse><result><id>066b0000000nuZcAAI</id><success>true</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ApexPageMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexPage() {
        Test.setMock(WebServiceMock.class, new ApexPageMock());
        ToolingService.ApexPage apexPage = new ToolingService.ApexPage();
        apexPage.Markup = '<apex:page />';
        apexPage.Name = 'MyPage';
        apexPage.MasterLabel = 'MyPage';
        Object result = new ToolingService.Client().create(new List<ToolingService.ApexPage>{apexPage});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //02:31:06.367 (367053000)|CALLOUT_REQUEST|[2658]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQALETebg8dBcGAbe6SnYaMyZAVcBEmaeECKF03A3obBQmA0WvjCkqEvIcOJq3hnknQj1gzUl9p2cL_y9FArmluMeP3UO</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ApexPage"><Id xsi:nil="true" /><ApiVersion xsi:nil="true" /><ControllerKey xsi:nil="true" /><ControllerType xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><Description xsi:nil="true" /><IsAvailableInTouch xsi:nil="true" /><IsConfirmationTokenRequired xsi:nil="true" /><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><Markup>&lt;apex:page /></Markup><MasterLabel>MyPage</MasterLabel><Name>MyPage</Name><NamespacePrefix xsi:nil="true" /><SystemModstamp xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //02:31:06.367 (367248000)|CALLOUT_REQUEST|[2658]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ApexPage:[ApiVersion=null, ApiVersion_type_info=(ApiVersion, urn:tooling.soap.sforce.com, null, 0, 1, true), ControllerKey=null, ControllerKey_type_info=(ControllerKey, urn:tooling.soap.sforce.com, null, 0, 1, true), ControllerType=null, ControllerType_type_info=(ControllerType, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Description=null, Description_type_info=(Description, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), IsAvailableInTouch=null, IsAvailableInTouch_type_info=(IsAvailableInTouch, urn:tooling.soap.sforce.com, null, 0, 1, true), IsConfirmationTokenRequired=null, IsConfirmationTokenRequired_type_info=(IsConfirmationTokenRequired, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Markup=<apex:page />, Markup_type_info=(Markup, urn:tooling.soap.sforce.com, null, 0, 1, true), MasterLabel=MyPage, MasterLabel_type_info=(MasterLabel, urn:tooling.soap.sforce.com, null, 0, 1, true), Name=MyPage, Name_type_info=(Name, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, ApiVersion, ControllerKey, ControllerType, CreatedBy, CreatedById, CreatedDate, Description, IsAvailableInTouch, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ApexPage, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //02:31:06.578 (578342000)|CALLOUT_RESPONSE|[2658]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><createResponse><result><id>066b0000001UJKzAAO</id><success>true</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ApexPageMemberMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexPageMember() {
        Test.setMock(WebServiceMock.class, new ApexPageMemberMock());
        ToolingService.ApexPageMember apexPageMember = new ToolingService.ApexPageMember();
        apexPageMember.Body = '<apex:page />';
        apexPageMember.Content = 'MyPage';
        Object result = new ToolingService.Client().create(new List<ToolingService.ApexPageMember>{apexPageMember});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //03:00:12.473 (473339000)|CALLOUT_REQUEST|[2682]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQALETebg8dBcGAbe6SnYaMyZAVcBEmaeECKF03A3obBQmA0WvjCkqEvIcOJq3hnknQj1gzUl9p2cL_y9FArmluMeP3UO</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ApexTrigger"><Id xsi:nil="true" /><ApiVersion xsi:nil="true" /><Body>trigger TestTrigger on Account (before insert) {}</Body><BodyCrc xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><IsValid xsi:nil="true" /><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><LengthWithoutComments xsi:nil="true" /><Name>TestTrigger</Name><NamespacePrefix xsi:nil="true" /><Status xsi:nil="true" /><SystemModstamp xsi:nil="true" /><TableEnumOrId xsi:nil="true" /><UsageAfterDelete xsi:nil="true" /><UsageAfterInsert xsi:nil="true" /><UsageAfterUndelete xsi:nil="true" /><UsageAfterUpdate xsi:nil="true" /><UsageBeforeDelete xsi:nil="true" /><UsageBeforeInsert xsi:nil="true" /><UsageBeforeUpdate xsi:nil="true" /><UsageIsBulk xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //03:00:12.473 (473607000)|CALLOUT_REQUEST|[2682]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ApexTrigger:[ApiVersion=null, ApiVersion_type_info=(ApiVersion, urn:tooling.soap.sforce.com, null, 0, 1, true), Body=trigger TestTrigger on Account (before insert) {}, BodyCrc=null, BodyCrc_type_info=(BodyCrc, urn:tooling.soap.sforce.com, null, 0, 1, true), Body_type_info=(Body, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), IsValid=null, IsValid_type_info=(IsValid, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), LengthWithoutComments=null, LengthWithoutComments_type_info=(LengthWithoutComments, urn:tooling.soap.sforce.com, null, 0, 1, true), Name=TestTrigger, Name_type_info=(Name, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), Status=null, Status_type_info=(Status, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), TableEnumOrId=null, TableEnumOrId_type_info=(TableEnumOrId, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageAfterDelete=null, UsageAfterDelete_type_info=(UsageAfterDelete, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageAfterInsert=null, UsageAfterInsert_type_info=(UsageAfterInsert, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageAfterUndelete=null, UsageAfterUndelete_type_info=(UsageAfterUndelete, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageAfterUpdate=null, UsageAfterUpdate_type_info=(UsageAfterUpdate, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageBeforeDelete=null, UsageBeforeDelete_type_info=(UsageBeforeDelete, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageBeforeInsert=null, UsageBeforeInsert_type_info=(UsageBeforeInsert, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageBeforeUpdate=null, UsageBeforeUpdate_type_info=(UsageBeforeUpdate, urn:tooling.soap.sforce.com, null, 0, 1, true), UsageIsBulk=null, UsageIsBulk_type_info=(UsageIsBulk, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, ApiVersion, Body, BodyCrc, CreatedBy, CreatedById, CreatedDate, IsValid, LastModifiedBy, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ApexTrigger, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //03:00:12.507 (507280000)|CALLOUT_RESPONSE|[2682]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><createResponse><result><errors><message>Missing field [TableEnumOrId] on trigger create</message><statusCode>INVALID_ARGUMENT_TYPE</statusCode></errors><id xsi:nil="true"/><success>false</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ApexTriggerMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexTrigger() {
        Test.setMock(WebServiceMock.class, new ApexTriggerMock());
        ToolingService.ApexTrigger apexTrigger = new ToolingService.ApexTrigger();
        apexTrigger.Name = 'TestTrigger';
        apexTrigger.TableEnumOrId = 'Account';
        apexTrigger.Body = 'trigger TestTrigger on Account (before insert) {}';
        Object result = new ToolingService.Client().create(new List<ToolingService.ApexTrigger>{apexTrigger});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //03:18:22.388 (388230000)|CALLOUT_REQUEST|[2682]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQALETebg8dBcGAbe6SnYaMyZAVcBEmaeECKF03A3obBQmA0WvjCkqEvIcOJq3hnknQj1gzUl9p2cL_y9FArmluMeP3UO</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ApexPageMember"><Id xsi:nil="true" /><Body>trigger TestTrigger on Account (before insert) {}</Body><Content xsi:nil="true" /><ContentEntity xsi:nil="true" /><ContentEntityId xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><IsDeleted xsi:nil="true" /><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><LastSyncDate xsi:nil="true" /><Metadata xsi:nil="true" /><MetadataContainer xsi:nil="true" /><MetadataContainerId xsi:nil="true" /><SymbolTable xsi:nil="true" /><SystemModstamp xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //03:18:22.388 (388429000)|CALLOUT_REQUEST|[2682]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ApexTriggerMember:[Body=trigger TestTrigger on Account (before insert) {}, Body_type_info=(Body, urn:tooling.soap.sforce.com, null, 0, 1, true), Content=null, ContentEntity=null, ContentEntityId=null, ContentEntityId_type_info=(ContentEntityId, urn:tooling.soap.sforce.com, null, 0, 1, true), ContentEntity_type_info=(ContentEntity, urn:tooling.soap.sforce.com, null, 0, 1, true), Content_type_info=(Content, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), IsDeleted=null, IsDeleted_type_info=(IsDeleted, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), LastSyncDate=null, LastSyncDate_type_info=(LastSyncDate, urn:tooling.soap.sforce.com, null, 0, 1, true), Metadata=null, MetadataContainer=null, MetadataContainerId=null, MetadataContainerId_type_info=(MetadataContainerId, urn:tooling.soap.sforce.com, null, 0, 1, true), MetadataContainer_type_info=(MetadataContainer, urn:tooling.soap.sforce.com, null, 0, 1, true), Metadata_type_info=(Metadata, urn:tooling.soap.sforce.com, null, 0, 1, true), SymbolTable=null, SymbolTable_type_info=(SymbolTable, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, Body, Content, ContentEntity, ContentEntityId, CreatedBy, CreatedById, CreatedDate, IsDeleted, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ApexPageMember, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //03:18:22.427 (427783000)|CALLOUT_RESPONSE|[2682]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><createResponse><result><errors><message>insufficient access rights on cross-reference id</message><statusCode>INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY</statusCode></errors><id xsi:nil="true"/><success>false</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ApexTriggerMemberMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testApexTriggerMember() {
        Test.setMock(WebServiceMock.class, new ApexTriggerMemberMock());
        ToolingService.ApexTriggerMember apexTriggerMember = new ToolingService.ApexTriggerMember();
        apexTriggerMember.Body = 'trigger TestTrigger on Account (before insert) {}';
        apexTriggerMember.ContentEntity = new ToolingService.ApexTrigger();
        apexTriggerMember.Metadata = new ToolingService.ApexTriggerMetadata();
        apexTriggerMember.MetadataContainer = new ToolingService.MetadataContainer();
        apexTriggerMember.SymbolTable = new ToolingService.SymbolTable();
        Object result = new ToolingService.Client().create(new List<ToolingService.ApexTriggerMember>{apexTriggerMember});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //03:24:28.409 (409348000)|CALLOUT_REQUEST|[2694]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQALETebg8dBcGAbe6SnYaMyZAVcBEmaeECKF03A3obBQmA0WvjCkqEvIcOJq3hnknQj1gzUl9p2cL_y9FArmluMeP3UO</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="ContainerAsyncRequest"><Id xsi:nil="true" /><CompilerErrors xsi:nil="true" /><CreatedBy xsi:nil="true" /><CreatedById xsi:nil="true" /><CreatedDate xsi:nil="true" /><ErrorMsg xsi:nil="true" /><IsCheckOnly xsi:nil="true" /><IsDeleted xsi:nil="true" /><IsRunTests xsi:nil="true" /><LastModifiedBy xsi:nil="true" /><LastModifiedById xsi:nil="true" /><LastModifiedDate xsi:nil="true" /><MetadataContainer xsi:nil="true" /><MetadataContainerId xsi:nil="true" /><MetadataContainerMember xsi:nil="true" /><MetadataContainerMemberId xsi:nil="true" /><State xsi:nil="true" /><SystemModstamp xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //03:24:28.409 (409544000)|CALLOUT_REQUEST|[2694]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(ContainerAsyncRequest:[CompilerErrors=null, CompilerErrors_type_info=(CompilerErrors, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy=null, CreatedById=null, CreatedById_type_info=(CreatedById, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedBy_type_info=(CreatedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), CreatedDate=null, CreatedDate_type_info=(CreatedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), ErrorMsg=null, ErrorMsg_type_info=(ErrorMsg, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), IsCheckOnly=null, IsCheckOnly_type_info=(IsCheckOnly, urn:tooling.soap.sforce.com, null, 0, 1, true), IsDeleted=null, IsDeleted_type_info=(IsDeleted, urn:tooling.soap.sforce.com, null, 0, 1, true), IsRunTests=null, IsRunTests_type_info=(IsRunTests, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy=null, LastModifiedById=null, LastModifiedById_type_info=(LastModifiedById, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedBy_type_info=(LastModifiedBy, urn:tooling.soap.sforce.com, null, 0, 1, true), LastModifiedDate=null, LastModifiedDate_type_info=(LastModifiedDate, urn:tooling.soap.sforce.com, null, 0, 1, true), MetadataContainer=null, MetadataContainerId=null, MetadataContainerId_type_info=(MetadataContainerId, urn:tooling.soap.sforce.com, null, 0, 1, true), MetadataContainerMember=null, MetadataContainerMemberId=null, MetadataContainerMemberId_type_info=(MetadataContainerMemberId, urn:tooling.soap.sforce.com, null, 0, 1, true), MetadataContainerMember_type_info=(MetadataContainerMember, urn:tooling.soap.sforce.com, null, 0, 1, true), MetadataContainer_type_info=(MetadataContainer, urn:tooling.soap.sforce.com, null, 0, 1, true), State=null, State_type_info=(State, urn:tooling.soap.sforce.com, null, 0, 1, true), SystemModstamp=null, SystemModstamp_type_info=(SystemModstamp, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, CompilerErrors, CreatedBy, CreatedById, CreatedDate, ErrorMsg, IsCheckOnly, IsDeleted, IsRunTests, ...), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=ContainerAsyncRequest, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //03:24:28.469 (469570000)|CALLOUT_RESPONSE|[2694]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><createResponse><result><errors><fields>MetadataContainerId</fields><message>null is not a valid containerId.: Metadata Container ID</message><statusCode>FIELD_INTEGRITY_EXCEPTION</statusCode></errors><id xsi:nil="true"/><success>false</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class ContainerAsyncRequestMock implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testContainerAsyncRequest() {
        Test.setMock(WebServiceMock.class, new ContainerAsyncRequestMock());
        ToolingService.ContainerAsyncRequest containerAsyncRequest = new ToolingService.ContainerAsyncRequest();
        containerAsyncRequest.CreatedBy = new ToolingService.User_x();
        containerAsyncRequest.LastModifiedBy = new ToolingService.User_x();
        containerAsyncRequest.MetadataContainer = new ToolingService.MetadataContainer();
        containerAsyncRequest.MetadataContainerMember = new ToolingService.MetadataContainerMember();
        containerAsyncRequest.MetadataContainerMember.ContentEntity = new ToolingService.Name();
        Object result = new ToolingService.Client().create(new List<ToolingService.ContainerAsyncRequest>{containerAsyncRequest});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
    
    //04:00:04.292 (292146000)|CALLOUT_REQUEST|[2694]|<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="urn:tooling.soap.sforce.com"><sessionId>00Db0000000d6mj!AQwAQALETebg8dBcGAbe6SnYaMyZAVcBEmaeECKF03A3obBQmA0WvjCkqEvIcOJq3hnknQj1gzUl9p2cL_y9FArmluMeP3UO</sessionId></SessionHeader></env:Header><env:Body><create xmlns="urn:tooling.soap.sforce.com"><sObjects xsi:type="CustomField"><Id xsi:nil="true" /><DeveloperName xsi:nil="true" /><FullName>Account.CustomField__c</FullName><Metadata><label>Custom Field</label><length>42</length><type>Text</type></Metadata><NamespacePrefix xsi:nil="true" /><TableEnumOrId xsi:nil="true" /></sObjects></create></env:Body></env:Envelope>
    //04:00:04.292 (292572000)|CALLOUT_REQUEST|[2694]|create_element:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(sObjects), sObjects=(CustomField:[DeveloperName=null, DeveloperName_type_info=(DeveloperName, urn:tooling.soap.sforce.com, null, 0, 1, true), FullName=Account.CustomField__c, FullName_type_info=(FullName, urn:tooling.soap.sforce.com, null, 0, 1, true), Id=null, Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), Metadata=CustomFieldMetadata:[apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), caseSensitive=null, caseSensitive_type_info=(caseSensitive, urn:tooling.soap.sforce.com, null, 0, 1, false), customDataType=null, customDataType_type_info=(customDataType, urn:tooling.soap.sforce.com, null, 0, 1, false), defaultValue=null, defaultValue_type_info=(defaultValue, urn:tooling.soap.sforce.com, null, 0, 1, false), deleteConstraint=null, deleteConstraint_type_info=(deleteConstraint, urn:tooling.soap.sforce.com, null, 0, 1, false), deprecated=null, deprecated_type_info=(deprecated, urn:tooling.soap.sforce.com, null, 0, 1, false), description=null, description_type_info=(description, urn:tooling.soap.sforce.com, null, 0, 1, false), displayFormat=null, displayFormat_type_info=(displayFormat, urn:tooling.soap.sforce.com, null, 0, 1, false), escapeMarkup=null, escapeMarkup_type_info=(escapeMarkup, urn:tooling.soap.sforce.com, null, 0, 1, false), externalDeveloperName=null, externalDeveloperName_type_info=(externalDeveloperName, urn:tooling.soap.sforce.com, null, 0, 1, false), externalId=null, externalId_type_info=(externalId, urn:tooling.soap.sforce.com, null, 0, 1, false), field_order_type_info=(caseSensitive, customDataType, defaultValue, deleteConstraint, deprecated, description, displayFormat, escapeMarkup, externalDeveloperName, externalId, ...), formula=null, formulaTreatBlanksAs=null, formulaTreatBlanksAs_type_info=(formulaTreatBlanksAs, urn:tooling.soap.sforce.com, null, 0, 1, false), formula_type_info=(formula, urn:tooling.soap.sforce.com, null, 0, 1, false), inlineHelpText=null, inlineHelpText_type_info=(inlineHelpText, urn:tooling.soap.sforce.com, null, 0, 1, false), isFilteringDisabled=null, isFilteringDisabled_type_info=(isFilteringDisabled, urn:tooling.soap.sforce.com, null, 0, 1, false), isNameField=null, isNameField_type_info=(isNameField, urn:tooling.soap.sforce.com, null, 0, 1, false), isSortingDisabled=null, isSortingDisabled_type_info=(isSortingDisabled, urn:tooling.soap.sforce.com, null, 0, 1, false), label=Custom Field, label_type_info=(label, urn:tooling.soap.sforce.com, null, 0, 1, false), length=42, length_type_info=(length, urn:tooling.soap.sforce.com, null, 0, 1, false), maskChar=null, maskChar_type_info=(maskChar, urn:tooling.soap.sforce.com, null, 0, 1, false), maskType=null, maskType_type_info=(maskType, urn:tooling.soap.sforce.com, null, 0, 1, false), picklist=null, picklist_type_info=(picklist, urn:tooling.soap.sforce.com, null, 0, 1, false), populateExistingRows=null, populateExistingRows_type_info=(populateExistingRows, urn:tooling.soap.sforce.com, null, 0, 1, false), precision=null, precision_type_info=(precision, urn:tooling.soap.sforce.com, null, 0, 1, false), referenceTo=null, referenceTo_type_info=(referenceTo, urn:tooling.soap.sforce.com, null, 0, 1, false), relationshipLabel=null, relationshipLabel_type_info=(relationshipLabel, urn:tooling.soap.sforce.com, null, 0, 1, false), relationshipName=null, relationshipName_type_info=(relationshipName, urn:tooling.soap.sforce.com, null, 0, 1, false), relationshipOrder=null, relationshipOrder_type_info=(relationshipOrder, urn:tooling.soap.sforce.com, null, 0, 1, false), reparentableMasterDetail=null, reparentableMasterDetail_type_info=(reparentableMasterDetail, urn:tooling.soap.sforce.com, null, 0, 1, false), required=null, required_type_info=(required, urn:tooling.soap.sforce.com, null, 0, 1, false), restrictedAdminField=null, restrictedAdminField_type_info=(restrictedAdminField, urn:tooling.soap.sforce.com, null, 0, 1, false), scale=null, scale_type_info=(scale, urn:tooling.soap.sforce.com, null, 0, 1, false), startingNumber=null, startingNumber_type_info=(startingNumber, urn:tooling.soap.sforce.com, null, 0, 1, false), stripMarkup=null, stripMarkup_type_info=(stripMarkup, urn:tooling.soap.sforce.com, null, 0, 1, false), summarizedField=null, summarizedField_type_info=(summarizedField, urn:tooling.soap.sforce.com, null, 0, 1, false), summaryFilterItems=null, summaryFilterItems_type_info=(summaryFilterItems, urn:tooling.soap.sforce.com, null, 0, -1, false), summaryForeignKey=null, summaryForeignKey_type_info=(summaryForeignKey, urn:tooling.soap.sforce.com, null, 0, 1, false), summaryOperation=null, summaryOperation_type_info=(summaryOperation, urn:tooling.soap.sforce.com, null, 0, 1, false), trackFeedHistory=null, trackFeedHistory_type_info=(trackFeedHistory, urn:tooling.soap.sforce.com, null, 0, 1, false), trackHistory=null, trackHistory_type_info=(trackHistory, urn:tooling.soap.sforce.com, null, 0, 1, false), trackTrending=null, trackTrending_type_info=(trackTrending, urn:tooling.soap.sforce.com, null, 0, 1, false), type_x=Text, type_x_type_info=(type, urn:tooling.soap.sforce.com, null, 1, 1, false), unique=null, unique_type_info=(unique, urn:tooling.soap.sforce.com, null, 0, 1, false), visibleLines=null, visibleLines_type_info=(visibleLines, urn:tooling.soap.sforce.com, null, 0, 1, false), writeRequiresMasterRead=null, writeRequiresMasterRead_type_info=(writeRequiresMasterRead, urn:tooling.soap.sforce.com, null, 0, 1, false)], Metadata_type_info=(Metadata, urn:tooling.soap.sforce.com, null, 0, 1, true), NamespacePrefix=null, NamespacePrefix_type_info=(NamespacePrefix, urn:tooling.soap.sforce.com, null, 0, 1, true), TableEnumOrId=null, TableEnumOrId_type_info=(TableEnumOrId, urn:tooling.soap.sforce.com, null, 0, 1, true), apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), field_order_type_info=(fieldsToNull, Id, DeveloperName, FullName, Metadata, NamespacePrefix, TableEnumOrId), fieldsToNull=null, fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), sObject_x.Id=null, sObject_x.Id_type_info=(Id, urn:tooling.soap.sforce.com, null, 1, 1, true), sObject_x.apex_schema_type_info=(urn:tooling.soap.sforce.com, true, false), sObject_x.field_order_type_info=(fieldsToNull, Id), sObject_x.fieldsToNull=null, sObject_x.fieldsToNull_type_info=(fieldsToNull, urn:tooling.soap.sforce.com, null, 0, -1, true), type_x=CustomField, type_x_att_info=(xsi:type)]), sObjects_type_info=(sObjects, urn:tooling.soap.sforce.com, null, 0, -1, false)]::SFDC_STACK_DEPTH=1 SOAPAction="" User-Agent=SFDC-Callout/29.0 Accept=text/xml Content-Type=text/xml; charset=UTF-8 
    //04:00:04.785 (785082000)|CALLOUT_RESPONSE|[2694]|<?xml version="1.0" encoding="UTF-8"?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:tooling.soap.sforce.com"><soapenv:Body><createResponse><result><id>00Nb0000008EJN2EAO</id><success>true</success></result></createResponse></soapenv:Body></soapenv:Envelope>
    public class CustomFieldMock2 implements WebServiceMock {
        public void doInvoke(Object stub, Object request, Map<String, Object> response, String endpoint, String soapAction, String requestName, String responseNS, String responseName, String responseType) {
            ToolingService.createResponse_element responseElement = new ToolingService.createResponse_element();
            responseElement.result = new List<ToolingService.SaveResult>{new ToolingService.SaveResult()};
            response.put('response_x', responseElement);
        }
    }
    
    static testMethod void testCustomField() {
        Test.setMock(WebServiceMock.class, new CustomFieldMock2());
        ToolingService.CustomField customField = new ToolingService.CustomField();
        customField.FullName = 'Account.CustomField__c';
        customField.Metadata = new ToolingService.CustomFieldMetadata();
        customField.Metadata.label = 'Custom Field';
        customField.Metadata.type_x = 'Text';
        customField.Metadata.length = 42;
        Object result = new ToolingService.Client().create(new List<ToolingService.CustomField>{customField});
        System.assert(result instanceof List<ToolingService.SaveResult>);
    }
}